stages:
  - build
  - test
  - container
  - helm chart
  - deploy

variables:
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true

  # As of Maven 3.3.0 instead of this you MAY define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # As of Maven 3.6.1, the use of `--no-tranfer-progress` (or `-ntp`) suppresses download and upload messages. The use
  # of the `Slf4jMavenTransferListener` is no longer necessary.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

image: maven:3-openjdk-17

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
# Be aware that `mvn deploy` will install the built jar into this repository. If you notice your cache size
# increasing, consider adding `-Dmaven.install.skip=true` to `MAVEN_OPTS` or in `.mvn/maven.config`
cache:
  paths:
    - .m2/repository

build:
  tags:
    - argus
  stage: build
  script:
    - mvn compile

test:
  tags:
    - argus
  stage: test
  script:
    - mvn test

build and publish docker image:
  tags:
    - argus
    - docker-image
  stage: container
  image:
    name: gcr.io/diamond-privreg/container-tools/kaniko-executor:v1.9.1-debug
    entrypoint: [ "" ]
  script:
    - echo 'Building image...'
    - env | grep "CI_"
    - /bin/sh ./kanikobuild.sh
    - echo "Done!"
  only:
    refs:
      - tags

publish helm chart:
  stage: helm chart
  tags:
    - argus
  image:
    name: gcr.io/diamond-pubreg/gda-core/nexus-helm-utils:latest
  script:
    - env | grep "CI_"
    - nexus-push helm/${CI_PROJECT_NAME} ${CI_COMMIT_TAG} ${CI_CHART_REGISTRY}
  only:
    refs:
      - tags
deploy:
  variables:
    INSTALLATION_NAME: Subscriptions
    NAMESPACE: fri44821
    CHART: helm/subscriptions
    SECRET_NAME: fri44821-gitlab-runner-secret
  tags:
    - daq-cd
  image:
    name: gcr.io/diamond-pubreg/gda-core/nexus-helm-utils:latest
    entrypoint: ["/bin/sh", "-c"]
  before_script:
    - export TOKEN=`kubectl -n=daq-gitlab-ci get secret ${SECRET_NAME} -o jsonpath='{.data.token}' | base64 -d`
  script:
    - env | grep "CI_"
    - helm -n ${NAMESPACE} --kube-token ${TOKEN} upgrade --install --set image.tag=main ${INSTALLATION_NAME} ${CHART}
    - kubectl -n ${NAMESPACE} --token ${TOKEN} rollout restart `kubectl -n ${NAMESPACE} --token ${TOKEN} get -o name deployment`
  stage: deploy
  only:
    refs:
      - tags


