asyncapi: 2.5.0
info:
  title: Subscriptions Service WebSocket API
  version: 0.1.0
  description: >-
    This describes the messages that can be used over web sockets to manage subscriptions. It is largely a description 
    of the bits of and extra constraints placed upon the STOMP 1.2 protocol as used by the subscriptions service. As 
    such, it documents and extra required header fields clients need to supply over and above those mandated by the 1.2 
    release and also describes the use of Receipt messages to indicate success of requested operations. In addition, the 
    requirements and naming format for topics that may be subscribed to are recorded. Similar documentation for specific
    channels (topics) will be provided in separate AsyncAPI documents.
servers:
  development:
    url: dev.cassandra.diamond.ac.uk/subscriptions
    protocol: ws
    protocolVersion: '13'
  production:
    url: prod.cassandra.diamond.ac.uk/subscriptions
    protocol: wss
    protocolVersion: '13'
defaultContentType: application/json
channels:
  /:
    publish:
      operationId: processReceivedMessage
      summary: Messages that can be sent to the the API
      message:
        oneOf:
          - $ref: '#/components/messages/Connect'
          - $ref: '#/components/messages/Subscribe'
          - $ref: '#/components/messages/Unsubscribe'
          - $ref: '#/components/messages/Disconnect'
    subscribe:
      operationId: sendMessage
      summary: >-
        Messages sent by the server to indicate the success of operations requested via clients.
      message:
        oneOf:
          - $ref: '#/components/messages/Connected'
          - $ref: '#/components/messages/ActionSuccessfulReceipt'
          - $ref: '#/components/messages/STOMPError'
components:
  messages:
    Connect:
      headers:
        type: object
        properties:
          stompCommand:
            type: string
            description: >-
              The instruction to establish a new STOMP connection to the underlying broker.
            const: CONNECT
          accept-version:
            type: string
            description: >-
              The version or versions of the STOMP protocol that the client can accept.
          host:
            type: string
            description: >-
              The name of the broker virtual host (where supported) to connect to.
          heart-beat:
            description: >-
              An array of two integers. The first indicates the smallest number of milliseconds between hearbeat
              signals that this client can guarantee to provide. O for this value indicates that the client cannot,
              or does not want to generate hearbeat signals. The second value indicates whether this client wants to
              receive heartbeat signals and, if so, the desired number of milliseconds between successive signals. A
              value of 0 indicates hearbeat signals are not required, with any positive number being the timeout
              period otherwise. So, for instance a value of [0, 1000] would indicate that the client cannot produce
              heatbeat signals, but requests that the server do so within 1 second of every communication. If this 
              header is not provided, this indicates that neither client nor server expects hearbeat signals to be 
              used.
            type: array
            items:
              type: integer
            minItems: 2
            maxItems: 2
        required:
          - stompCommand
          - accept-version
          - host
      x-response:
        summary: >-
          The connected message will only be returned on success, so clients must handle the no response case.
        $ref: '#/components/messages/Connected'
    Connected:
      summary: >-
        The server message to indicate a successful STOMP connection has been made to the underlying broker.
      headers:
        type: object
        properties:
          stompCommand:
            description: >-
              The indication that the STOMP connection has been successfully created. Note: Unless otherwise noted, all  
              STOMP header values within the command header are presnted as single element string arrays.
            type: string
            const: CONNECTED
            properties:
              version:
                description: The version of the STOMP protocol the session will be using.
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 1
              server:
                description: >-
                  The name and version of the Broker providing the STOMP connection in the form Name/Version
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 1
              heart-beat:
                description: >-
                  An array of two integers. The first indicates the smallest number of milliseconds between hearbeat
                  signals that the server can guarantee to provide. O for this value indicates that the server cannot,
                  or does not want to generate hearbeat signals. The second value indicates whether this server wants to
                  receive heartbeat signals and, if so, the desired number of milliseconds between successive signals. A
                  value of 0 indicates hearbeat signals are not required, with any positive number being the timeout
                  period otherwise. So, for instance a value of [1000, 0] would indicate that the server will produce a
                  heatbeat signal within 1 second of every communication, but does not expect such signals from the 
                  client. If this header is not provided or is set to the default value of [0,0], this indicates that 
                  neither client nor server expects hearbeat signals to be used.
                type: array
                items:
                  type: integer
                minItems: 2
                maxItems: 2
                default: [0,0]
              session:
                description: >-
                  The id of the STOMP session creted by the broker in broker specific format
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 1
            required:
              - version
          wsSessionId:
            type: string
            description: >-
              GUID identifying the Websocket session
        required:
          - stompCommand
    Disconnect:
      headers:
        type: object
        properties:
          stompCommand:
            type: string
            description: >-
              The instruction to delete the STOMP connection to the underlying broker.
            const: DISCONNECT
          receipt:
            type: string
            description: >-
              An id to be used in future by the server to indicate to the client that the request has been received and 
              correctly processed; i.e. the STOMP connection has been closed. This must be unique within the client and, 
              to avoid clashes on the server should contain a prefix identifying the client e.g. its session id.
        required:
          - stompCommand
          - receipt
      x-response:
        summary: >-
          The receipt message will only be returned on success so clients must handle the no response case.
        $ref: '#/components/messages/ActionSuccessfulReceipt'
    Subscribe:
      headers:
        type: object
        properties:
          stompCommand:
            type: string
            description: The instruction to attempt to create a new subscription.
            const: SUBSCRIBE
          id:
            type: string
            description: >-
              An id to be used in future by the server and client to refer to this subscription. This must  be unique 
              within the client and, to avoid clashes on the server should contain a prefix identifying the client e.g. 
              its session id.
          destination:
            type: string
            description: >-
              The name of the public channel (topic) to which the subscription should be created. This must be of the 
              form public.???.???
          receipt:
            type: string
            description: >-
              An id to be used in future by the server to indicate to the client that the request has been received and 
              correctly processed; i.e. the subscription has been successfully created. This must be unique within the 
              client and, to avoid clashes on the server should contain a prefix identifying the client e.g. its session
              id.
        required:
          - stompCommand
          - id
          - destination
          - receipt
      x-response:
        summary: >-
          The receipt message will only be returned on success so clients must handle the no response case.
        $ref: '#/components/messages/ActionSuccessfulReceipt'
    Unsubscribe:
      headers:
        type: object
        properties:
          stompCommand:
            type: string
            description: The instruction to attempt to delete and existing subscription.
            const: UNSUBSCRIBE
          id:
            type: string
            description: >-
              An id to be used in future by the server and client to refer to this subscription. This must be unique 
              within the client and, to avoid clashes on the server should contain a prefix identifying the client e.g. 
              its session id.
          receipt:
            type: string
            description: >-
              An id to be used in future by the server to indicate to the client that the request has been received and 
              correctly processed; i.e. the subscription has been successfully deleted. This must be unique within the 
              client and, to avoid clashes on the server should contain a prefix identifying the client e.g. its session
              id.
        required:
          - stompCommand
          - id
          - receipt
      x-response:
        summary: >-
          The receipt message will only be returned on success so clients must handle the no response case.
        $ref: '#/components/messages/ActionSuccessfulReceipt'
    ActionSuccessfulReceipt:
      summary: >-
        Indicates the successful completion of a previously requested operation identified by the receipt-id.
      headers:
        type: object
        properties:
          stompCommand:
            description: >-
              Indicates that this message identifies a previously requested operation that has been successfully 
              completed.
            type: string
            const: RECEIPT
            properties:
              receipt-id:
                description: >-
                  The id of the message originally submitted by the client when requesting and action.
                type: array
                items:
                  type: string
                minItems: 1
                maxItems: 1
        required:
          - receipt-id
    STOMPError:
      summary: >-
        Returned by the server (broker) in the event of an invalid STOMP message or the failure of an attemped operation  
        broker. Whenever an Error message is sent, the server will close the STOMP connection as soon as possible after 
        sending it as required by the protocol definiion.